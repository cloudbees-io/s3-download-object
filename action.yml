apiVersion: automation.cloudbees.io/v1alpha1
kind: action
name: download-s3-object
inputs:
  file-path:  # id of input
    description: 'Local File Path'
    required: true
  bucket-name:  # id of input
    description: 'bucket name'
    required: true
  s3-path:  # id of input
    description: 's3 path containing object'
    required: true
runs:
  using: composite
  steps:
    - id: s3-action-download
      name: s3-action-download
      uses: docker://amazon/aws-cli
      shell: bash
      run: |
        set -x

        bucketname="${{ inputs.bucket-name }}"
        s3path="${{ inputs.s3-path }}"

        s3url="$bucketname"

        # if bucketname does not have s3:// prefix 
        if [[ $bucketname != s3://* ]]; then
          bn=$bucketname
          bucketname="s3://$bucketname"
        else
          bn=${bucketname#s3://}
        fi 

        #if s3path does not start with /
        if [[ $s3path != /* ]]; then
          s3p=$s3path
          s3path="/$s3path"
        else
          s3p=${$s3path#/}
        fi 
        
        # final s3url
        s3url="$bucketname$s3path"

        echo $s3uri

        cmd=$(aws s3api head-object --bucket $bn --key $s3p &> /dev/null)
      
        if [ $? -ne 0 ]; then
           echo "is a folder"
           aws s3 cp $s3url ${{ inputs.file-path }} --recursive
        else
            echo "is a file"
            aws s3 cp $s3url ${{ inputs.file-path }}  
        fi      
